#!/bin/bash



export PROJECT_HOME="$(cd "`dirname "$0"`"/../..; pwd)"

MONITOR_PREFIX="Monitor-"
HIPPO_DIR=${PROJECT_HOME}/hippo
HIPPO_BIN_DIR=${HIPPO_DIR}/bin
HIPPO_SBIN_DIR=${HIPPO_DIR}/sbin
HIPPO_CONF_DIR=${HIPPO_DIR}/etc
HIPPO_LOG_DIR=${HIPPO_DIR}/var/logs


. "${HIPPO_CONF_DIR}/env.conf"
. "${HIPPO_CONF_DIR}/runtime-env-info.sh"

while read assignment; do
  if [[ $assignment != *"#"* ]] ; then
    if [ ! -z "$assignment" -a "$assignment" != " " ]; then
      export "$assignment"
    fi
  fi


done < ${HIPPO_CONF_DIR}/env.conf


function usage ()
{
    temp_serivce_name="$(basename ${PROJECT_HOME})"
    echo "[monitor-status]
    Usage: `basename $0 ` SERVICE
    e.g. `basename $0` "$temp_serivce_name"
    "
}

while getopts 'h' OPTION; do
  case "$OPTION" in
    h)
      usage
      exit
      ;;
    ?)
      usage
      exit 1
      ;;
  esac
done
shift "$(($OPTIND -1))"
SERVICE_NAME=$@



# check for required args
if [[ -z $SERVICE_NAME ]] ; then
  echo "$(basename $0): missing SERVICE"
  usage
  exit 1
fi
MONITOR="${MONITOR_PREFIX}${SERVICE_NAME}"

function status() {
  monitor_retout=$(status_monitor)
  monitor_retcode=$?
  service_retout=$(status_service)
  service_retcode=$?
  if [[ $monitor_retcode == 0 && $service_retcode == 0 ]]; then
    RETVAL=0
  else
    RETVAL=1
  fi

  if [[ $RETVAL == 0 ]]; then
    echo $monitor_retout
    echo $service_retout
  else
    >&2 echo $monitor_retout
    >&2 echo $service_retout
  fi

  exit $RETVAL

}

function status_monitor() {
  bash ${HIPPO_SBIN_DIR}/daemon.sh $MONITOR status 1
}

function status_service() {
  bash ${HIPPO_SBIN_DIR}/daemon.sh $SERVICE_NAME status 1
}


status
